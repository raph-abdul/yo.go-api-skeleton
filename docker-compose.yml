# Copyright 2025 Raph Abdul
# Licensed under the Apache License, Version 2.0.
# Visit http://www.apache.org/licenses/LICENSE-2.0 for details.

version: "3.8"
services:
  app:
    build: .
    ports:
      # Use variable from .env, default to 8080 if not set
      - "${APP_SERVER_PORT:-8080}:8080"
    environment:
      # Read DB settings from .env file
      DB_HOST: database # Service name for container-to-container communication
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE:-disable}

      # --- CRUCIAL: Add DATABASE_URL for migrate script ---
      # Uses the DB_HOST set above (which is 'database')
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@database:${DB_PORT:-5432}/${DB_NAME}?sslmode=${DB_SSLMODE:-disable}"
      # --- End DATABASE_URL ---

      # Read other app settings from .env file
      APP_AUTH_ACCESS_TOKEN_DURATION: ${APP_AUTH_ACCESS_TOKEN_DURATION:-1h}
      APP_AUTH_REFRESH_TOKEN_DURATION: ${APP_AUTH_REFRESH_TOKEN_DURATION:-168h}
      APP_SERVER_PORT: ${APP_SERVER_PORT:-8080} # Port inside container (usually matches mapped)
      APP_AUTH_JWT_SECRET: ${APP_AUTH_JWT_SECRET}
      # Add any other ENV VARS your application needs (e.g., APP_ENV)
      # APP_ENV: ${APP_ENV:-development}

    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:15-alpine
    environment:
      # Read main DB settings from .env file
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      # Use variable from .env, default to 5432 if not set
      - "${DB_PORT:-5432}:5432"
    volumes:
      # Keep your volume name
      - db_data:/var/lib/postgresql/data
    healthcheck:
      # Corrected DB name, use variables read from .env
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  # Keep your volume name
  db_data: